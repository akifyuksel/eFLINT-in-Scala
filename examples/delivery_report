// Setup
#1 > :jump 2
New type buyer
New type day
New type duty-to-pay
New type duty-to-send
New type in-stock
New type order-product
New type pay-order
New type product
New type send-product
New type time-in-minutes
New type webshop
#2 > :d

#2 > :jump 3
+time-in-minutes(0)
#3 > :d
time-in-minutes(0) = True



// Scenario 1: Alice tries to buy a sweater from VD that is not in stock.
+in-stock(0).                                         // the Sweater is not in stock
order-product(Alice, VD, Sweater).                    // the product cannot be ordered as it is not in stock
?duty-to-pay                                          // the buyer does not have a duty to pay, as the product
                                                      // cannot be ordered

// Trace
#3 > :jump 4
+in-stock(0)
#4 > :d
in-stock(0) = True
time-in-minutes(0) = True

#4 > :jump 5
+duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30))
#5 > :d
in-stock(0) = True
time-in-minutes(0) = True
duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30)) = True

#5 > :jump 6
#6 > :d
in-stock(0) = True
time-in-minutes(0) = True
duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30)) = True



// Scenario 2: Alice buys a product, but doesn't pay in time.
-in-stock(0).
+in-stock(1).

order-product(Alice, VD, Sweater).    // the product is ordered
?duty-to-pay.                         // Alice now has a duty to pay the order she made

-time-in-minutes(0).
+time-in-minutes(13).
?!Violated(duty-to-pay).              // the duty has not yet been violated

-time-in-minutes(13).
+time-in-minutes(31).                 // it has been over 30 minutes
?Violated(duty-to-pay).               // the duty has been violated

// Trace 
#3 > :jump 4
+in-stock(1)
#4 > :d
time-in-minutes(0) = True
in-stock(1) = True

#4 > :jump 5
+duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30))
#5 > :d
time-in-minutes(0) = True
in-stock(1) = True
duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30)) = True

#5 > :jump 6
#6 > :jump 7
-time-in-minutes(0)
#7 > :jump 8
+time-in-minutes(13)
#8 > :jump 9
#9 > :d
time-in-minutes(0) = False
in-stock(1) = True
time-in-minutes(13) = True
duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30)) = True

#9 > ?!Violated(duty-to-pay) // report here based on trace
query successful:


#9 > :jump 10
-time-in-minutes(13)
#10 > :jump 11
+time-in-minutes(31)

#11 > :jump 12

#12 > :d
time-in-minutes(0) = False
in-stock(1) = True
time-in-minutes(13) = False
time-in-minutes(31) = True
duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30)) = True

#12 > ?Violated(duty-to-pay) //report here based on trace
query successful
violations:
  violated duty!: duty-to-pay(buyer("Alice"),webshop("VD"),product("Sweater"),time-in-minutes(30))


// Scenario 3: Alice buys a product from VD.
+in-stock(1).                                      // comment if running together with scenario 2

order-product(Alice, VD, Sweater).                 // Alice orders a product, which creates a duty to pay
?duty-to-pay.                                      // for her to the webshop.

pay-order(Alice, Webshop, Sweater).                // Alice immediately pays the order
?!duty-to-pay.                                     // the duty has been terminated, as Alice paid for the sweater
?duty-to-send.                                     // the webshop now needs to send the sweater to Alice

-day(0).
+day(1).                                           // 1 day passes
?!Violated(duty-to-send(VD, Alice, Sweater, 1)).   // the duty to send has not yet been violated

send-product(Webshop, Alice, Sweater).             // the webshop sends the sweater to alice
?!duty-to-send.                                    // the duty has been terminated, as the product has been sent

// Trace



// Scenario 4: Alice buys a product, but VD fails to send.
order-product(Alice, VD, Sweater).
?duty-to-pay.                                      // the product is ordered and Alice now has a duty to pay

pay-order(Alice, Webshop, Sweater).                // Alice immediately pays the order
?!duty-to-pay.                                     // the duty has been terminated, as Alice paid for the sweater
?duty-to-send.                                     // the webshop now needs to send the sweater to Alice

-day(0).
+day(1).                                           // 1 day passes
?!Violated(duty-to-send(VD, Alice, Sweater, 1)).   // the duty to send has not yet been violated

-day(1). +day(8).                                  // 8 days pass, over the limit of 7 days
?Violated(duty-to-send(VD, Alice, Sweater, 8)).    // the duty has now been violated and VD is liable

//Trace
